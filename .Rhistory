repecv = 5,
size = c(nodos),
decay = c(0.01, 0.1, 0.001),
repenn = 5,
itera = 1000
)
avnnet6$modelo = paste("avnnet6N", nodos)
h2o6 <- cruzadah2o(
data = lol2,
vardep = vardep,
listconti = continuas6,
listclass = categoricas6,
acti = "Tanh",
grupos = 4,
sinicio = 12345,
repecv = 5,
size = c(nodos),
epochs = 1000
)
h2o6$modelo <- paste("h2o6N", nodos)
union <- rbind(union, avnnet6, h2o6)
}
par(cex.axis = 0.5)
boxplot(data = union, error ~ modelo)
categoricas6 <- c(
"position",
)
continuas6 <- c(
"minionkills",
"monsterkillsownjungle",
"oppcsat15",
"teamtowerkills"
)
categoricas6 <- c(
"position"
)
lineal6 <- cruzadalin(
data = lol2,
vardep = vardep,
listconti = continuas6,
listclass = categoricas6,
grupos = 4,
sinicio = 12345,
repecv = 5
)
lineal6$modelo = "lineal6"
union <- lineal6
for (nodos in seq(from = 2, to = 14, by = 3)) {
avnnet6 <- cruzadaavnnet(
data = lol2,
vardep = vardep,
listconti = continuas6,
listclass = categoricas6,
grupos = 4,
sinicio = 12345,
repecv = 5,
size = c(nodos),
decay = c(0.01, 0.1, 0.001),
repenn = 5,
itera = 1000
)
avnnet6$modelo = paste("avnnet6N", nodos)
h2o6 <- cruzadah2o(
data = lol2,
vardep = vardep,
listconti = continuas6,
listclass = categoricas6,
acti = "Tanh",
grupos = 4,
sinicio = 12345,
repecv = 5,
size = c(nodos),
epochs = 1000
)
h2o6$modelo <- paste("h2o6N", nodos)
union <- rbind(union, avnnet6, h2o6)
}
par(cex.axis = 0.5)
boxplot(data = union, error ~ modelo)
continuas6 <- c(
"minionkills",
"monsterkillsownjungle",
"oppcsat15",
"teamtowerkills"
)
categoricas6 <- c(
"position"
)
lineal6 <- cruzadalin(
data = lol2,
vardep = vardep,
listconti = continuas6,
listclass = categoricas6,
grupos = 4,
sinicio = 12345,
repecv = 5
)
lineal6$modelo = "lineal6"
union <- lineal6
for (nodos in seq(from = 2, to = 14, by = 3)) {
avnnet6 <- cruzadaavnnet(
data = lol2,
vardep = vardep,
listconti = continuas6,
listclass = categoricas6,
grupos = 4,
sinicio = 12345,
repecv = 5,
size = c(nodos),
decay = c(0.01, 0.1, 0.001),
repenn = 5,
itera = 1000
)
avnnet6$modelo = paste("avnnet6N", nodos)
h2o6 <- cruzadah2o(
data = lol2,
vardep = vardep,
listconti = continuas6,
listclass = categoricas6,
acti = "Tanh",
grupos = 4,
sinicio = 12345,
repecv = 5,
size = c(nodos),
epochs = 1000
)
h2o6$modelo <- paste("h2o6N", nodos)
union <- rbind(union, avnnet6, h2o6)
}
par(cex.axis = 0.5)
boxplot(data = union, error ~ modelo)
par(cex.axis = 0.9)
boxplot(data = union, error ~ modelo)
par(cex.axis = 0.7)
boxplot(data = union, error ~ modelo)
union <- rbind(union, lineal)
load("C:/Users/secci/Workspace/ml/p1/r/.RData")
union <- rbind(union, lineal)
save.image("C:/Users/secci/Workspace/ml/p2/r/p2.RData")
setwd("C:/Users/secci/Workspace/ml/p2/r")
load("C:/Users/secci/Workspace/ml/p2/r/p2 - assemble.RData")
load("C:/Users/secci/Workspace/ml/p2/r/p2 - 2 mÃ©todos.RData")
avnnetv2 <- avnnet
avnnetv2 <- avvnet
avnnetv2$modelo = "avnnetv2"
View(avnnetv2)
load("C:/Users/secci/Workspace/ml/p2/r/p2 - assemble.RData")
avnnetv2bis <- as.data.frame(avnnetn4v2[1])
avnnetv2bis$modelo <- "avnnetn4v2"
prediavnnetv2 <- as.data.frame(avnnetn4v2[2])
prediavnnetv2$avnnet <- prediavnnetv2$Yes
avnnetv2bis <- as.data.frame(avnnetv2[1])
avnnetv2bis$modelo <- "avnnetv2"
prediavnnetv2 <- as.data.frame(avnnetv2[2])
prediavnnetv2$avnnet <- prediavnnetv2$Yes
union <- rbind(llv2bis,
avnnetv2bis,
gradientboostingv2bis,
baggingv2bis)
View(llv2bis)
View(avnnetv2bis)
library(sas7bdat)
library(nnet)
library(h2o)
library(dummies)
library(MASS)
library(reshape)
library(caret)
source("cruzadas ensamblado binaria fuente.R")
sel2 <-
read.sas7bdat("C:\\Users\\secci\\Workspace\\ml\\p2\\lib\\seleccion_metodo_2.sas7bdat")
dput(names(sel2))
sel2 <- na.omit(sel2, (!is.na(sel2)))
sel2$result <-
factor(sel2$result,
levels = c(0, 1),
labels = c("No", "Yes"))
vardep <- c("result")
continuasv2 <- c(
"assists",
"deaths",
"earned_gpm",
"earnedgold",
"gspd",
"inhibitors",
"monsterkillsenemyjungle",
"opp_inhibitors",
"opp_towers",
"team_kpm",
"towers"
)
categoricasv2 <- c("firsttothreetowers")
avnnetv2 <- cruzadaavnnetbin(
data = sel2,
vardep = vardep,
listconti = continuasv2,
listclass = categoricasv2,
grupos = 4,
sinicio = 1234,
repe = 31,
size = c(5),
decay = c(0.1),
repeticiones = 5,
itera = 200
)
avnnetv2$modelo = "avnnetv2"
avnnetv2bis <- as.data.frame(avnnetv2[1])
avnnetv2bis$modelo <- "avnnetv2"
prediavnnetv2 <- as.data.frame(avnnetv2[2])
prediavnnetv2$avnnet <- prediavnnetv2$Yes
gradientboosting003d4v2 <- cruzadagbmbin(
data = sel2,
vardep = vardep,
listconti = continuasv2,
listclass = categoricasv2,
grupos = 4,
sinicio = 1234,
repe = 31,
n.minobsinnode = 10,
shrinkage = 0.03,
n.trees = 1000,
interaction.depth = 4
)
gradientboosting003d4v2bis <- as.data.frame(gradientboosting003d4v2[1])
gradientboosting003d4v2bis$modelo <- "gbm"
predigradientboosting003d4v2 <- as.data.frame(gradientboosting003d4v2[2])
predigradientboosting003d4v2$gbm <- predigradientboosting003d4v2$Yes
baggingv2 <- cruzadarfbin(
data = sel2,
vardep = vardep,
listconti = continuasv2,
listclass = categoricasv2,
grupos = 4,
sinicio = 1234,
repe = 31,
nodesize = 10,
mtry = 12,
ntree = 200,
replace = TRUE
)
baggingv2bis <- as.data.frame(baggingv2[1])
baggingv2bis$modelo <- "rf"
predibaggingv2 <- as.data.frame(baggingv2[2])
predibaggingv2$rf <- predibaggingv2$Yes
union <- rbind(llv2bis,
avnnetv2bis,
gradientboosting003d4v2bis,
baggingv2bis)
unipredi <-
cbind(predillv2,
prediavnnetv2,
predigradientboosting003d4v2,
predibaggingv2)
unipredi <- unipredi[, !duplicated(colnames(unipredi))]
unipredi$logiavnnet <- (unipredi$logi + unipredi$avnnet) / 2
unipredi$logigbm <- (unipredi$logi + unipredi$gbm) / 2
unipredi$logirf <- (unipredi$logi + unipredi$rf) / 2
unipredi$avnnetgbm <- (unipredi$avnnet + unipredi$gbm) / 2
unipredi$avnnetrf <- (unipredi$avnnet + unipredi$rf) / 2
unipredi$gbmrf <- (unipredi$gbm + unipredi$rf) / 2
unipredi$logiavnnetgbm <-
(unipredi$logi + unipredi$avnnet + unipredi$gbm) / 3
unipredi$logiavnnetrf <-
(unipredi$logi + unipredi$avnnet + unipredi$rf) / 3
unipredi$logigbmrf <-
(unipredi$logi + unipredi$gbm + unipredi$rf) / 3
unipredi$avnnetgbmrf <-
(unipredi$avnnet + unipredi$gbm + unipredi$rf) / 3
unipredi$logiavnnetgbmrf <-
(unipredi$logi + unipredi$avnnet + unipredi$gbm + unipredi$rf) / 4
listado <- c(
"logi",
"avnnet",
"rf",
"gbm",
"logiavnnet",
"logigbm",
"logirf",
"avnnetgbm",
"avnnetrf",
"gbmrf",
"logiavnnetgbm",
"logiavnnetrf",
"logigbmrf",
"avnnetgbmrf",
"logiavnnetgbmrf"
)
tasafallos <- function(x, y) {
confu <- confusionMatrix(x, y)
tasa <- confu[[3]][1]
return(tasa)
}
auc <- function(x, y) {
curvaroc <- roc(response = x, predictor = y)
auc <- curvaroc$auc
return(auc)
}
# Se obtiene el numero de repeticiones CV y se calculan las medias por repe en
# el data frame medias0
repeticiones <- nlevels(factor(unipredi$Rep))
unipredi$Rep <- as.factor(unipredi$Rep)
unipredi$Rep <- as.numeric(unipredi$Rep)
medias0 <- data.frame(c())
for (prediccion in listado)
{
unipredi$proba <- unipredi[, prediccion]
unipredi[, prediccion] <-
ifelse(unipredi[, prediccion] > 0.5, "Yes", "No")
for (repe in 1:repeticiones)
{
paso <- unipredi[(unipredi$Rep == repe),]
pre <- factor(paso[, prediccion])
archi <- paso[, c("proba", "obs")]
archi <- archi[order(archi$proba),]
obs <- paso[, c("obs")]
tasa = 1 - tasafallos(pre, obs)
t <- as.data.frame(tasa)
t$modelo <- prediccion
auc <- auc(archi$obs, archi$proba)
t$auc <- auc
medias0 <- rbind(medias0, t)
}
}
# Finalmente boxplot
par(cex.axis = 0.5, las = 2)
boxplot(data = medias0,
tasa ~ modelo,
col = "pink",
main = "TASA FALLOS")
# Para AUC se utiliza la variable auc del archivo medias0
boxplot(data = medias0,
auc ~ modelo,
col = "pink",
main = "AUC")
par(cex.axis = 0.7, las = 2)
boxplot(data = medias0,
tasa ~ modelo,
col = "pink",
main = "TASA FALLOS")
# Para AUC se utiliza la variable auc del archivo medias0
boxplot(data = medias0,
auc ~ modelo,
col = "pink",
main = "AUC")
rfv2 <- cruzadarfbin(
data = sel2,
vardep = vardep,
listconti = continuasv2,
listclass = categoricasv2,
grupos = 4,
sinicio = 1234,
repe = 31,
nodesize = 10,
mtry = 6,
ntree = 200,
replace = TRUE
)
rfv2bis <- as.data.frame(rfv2[1])
rfv2bis$modelo <- "rf"
predirfv2 <- as.data.frame(rfv2[2])
predirfv2$rf <- predirfv2$Yes
union <- rbind(llv2bis,
avnnetv2bis,
gradientboosting003d4v2bis,
rfv2bis)
unipredi <-
cbind(predillv2,
prediavnnetv2,
predigradientboosting003d4v2,
predirfv2)
unipredi <- unipredi[, !duplicated(colnames(unipredi))]
unipredi$logiavnnet <- (unipredi$logi + unipredi$avnnet) / 2
unipredi$logigbm <- (unipredi$logi + unipredi$gbm) / 2
unipredi$logirf <- (unipredi$logi + unipredi$rf) / 2
unipredi$avnnetgbm <- (unipredi$avnnet + unipredi$gbm) / 2
unipredi$avnnetrf <- (unipredi$avnnet + unipredi$rf) / 2
unipredi$gbmrf <- (unipredi$gbm + unipredi$rf) / 2
unipredi$logiavnnetgbm <-
(unipredi$logi + unipredi$avnnet + unipredi$gbm) / 3
unipredi$logiavnnetrf <-
(unipredi$logi + unipredi$avnnet + unipredi$rf) / 3
unipredi$logigbmrf <-
(unipredi$logi + unipredi$gbm + unipredi$rf) / 3
unipredi$avnnetgbmrf <-
(unipredi$avnnet + unipredi$gbm + unipredi$rf) / 3
unipredi$logiavnnetgbmrf <-
(unipredi$logi + unipredi$avnnet + unipredi$gbm + unipredi$rf) / 4
listado <- c(
"logi",
"avnnet",
"rf",
"gbm",
"logiavnnet",
"logigbm",
"logirf",
"avnnetgbm",
"avnnetrf",
"gbmrf",
"logiavnnetgbm",
"logiavnnetrf",
"logigbmrf",
"avnnetgbmrf",
"logiavnnetgbmrf"
)
tasafallos <- function(x, y) {
confu <- confusionMatrix(x, y)
tasa <- confu[[3]][1]
return(tasa)
}
auc <- function(x, y) {
curvaroc <- roc(response = x, predictor = y)
auc <- curvaroc$auc
return(auc)
}
# Se obtiene el numero de repeticiones CV y se calculan las medias por repe en
# el data frame medias0
repeticiones <- nlevels(factor(unipredi$Rep))
unipredi$Rep <- as.factor(unipredi$Rep)
unipredi$Rep <- as.numeric(unipredi$Rep)
medias0 <- data.frame(c())
for (prediccion in listado)
{
unipredi$proba <- unipredi[, prediccion]
unipredi[, prediccion] <-
ifelse(unipredi[, prediccion] > 0.5, "Yes", "No")
for (repe in 1:repeticiones)
{
paso <- unipredi[(unipredi$Rep == repe),]
pre <- factor(paso[, prediccion])
archi <- paso[, c("proba", "obs")]
archi <- archi[order(archi$proba),]
obs <- paso[, c("obs")]
tasa = 1 - tasafallos(pre, obs)
t <- as.data.frame(tasa)
t$modelo <- prediccion
auc <- auc(archi$obs, archi$proba)
t$auc <- auc
medias0 <- rbind(medias0, t)
}
}
# Finalmente boxplot
par(cex.axis = 0.7, las = 2)
boxplot(data = medias0,
tasa ~ modelo,
col = "pink",
main = "TASA FALLOS")
# Para AUC se utiliza la variable auc del archivo medias0
boxplot(data = medias0,
auc ~ modelo,
col = "pink",
main = "AUC")
save.image("C:/Users/secci/Workspace/ml/p2/r/p2 - assemble.RData")
medias0$modelo <- with(medias0,
reorder(modelo, tasa, mean))
par(cex.axis = 0.7, las = 2)
boxplot(data = medias0,
tasa ~ modelo,
col = "pink",
main = 'TASA FALLOS')
# ************************************
# PARA AUC
# ************************************
# PRESENTACION TABLA MEDIAS
tablamedias2 <- medias0 %>%
group_by(modelo) %>%
summarize(auc = mean(auc))
tablamedias2 <- tablamedias2[order(-tablamedias2$auc),]
# ORDENACIÃN DEL FACTOR MODELO POR LAS MEDIAS EN AUC
# PARA EL GRAFICO
medias0$modelo <- with(medias0,
reorder(modelo, auc, mean))
par(cex.axis = 0.7, las = 2)
boxplot(data = medias0,
auc ~ modelo,
col = "pink",
main = 'AUC')
shortlist <- c(
"logiavnnetgbm",
"logiavnnetgbmrf",
"logiavnnetrf",
"logigbmrf",
"avnnetrf",
"avnnet"
)
medias0$modelo <- as.character(medias0$modelo)
mediasver <- medias0[medias0$modelo %in% shortlist, ]
mediasver$modelo <- with(mediasver,
reorder(modelo, auc, median))
par(cex.axis = 0.7, las = 2)
boxplot(data = mediasver,
auc ~ modelo,
col = "pink",
main = 'AUC')
mediasver$modelo <- with(mediasver,
reorder(modelo, tasa, median))
par(cex.axis = 0.7, las = 2)
boxplot(data = mediasver,
tasa ~ modelo,
col = "pink",
main = 'Tasa de Error Media')
View(mediasver)
View(tablamedias2)
View(mediasver)
View(tablamedias)
View(tablamedias)
write.table(tablamedias, file = "tablamedias.csv", sep = ";", row.names = TRUE, col.names = TRUE)
View(tablamedias2)
load("C:/Users/secci/Workspace/ml/p2/r/p2 - best.RData")
load("C:/Users/secci/Workspace/ml/p2/r/p2 - compare.RData")
load("C:/Users/secci/Workspace/ml/p2/r/p2 - 2 mÃ©todos.RData")
View(avvnet)
mean(avvnet$tasa)
